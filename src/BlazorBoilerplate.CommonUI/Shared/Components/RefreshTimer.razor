@implements IDisposable
@using System.Timers

<div class="row">
    <div class="align-self-center justify-content-center">
        <MatSlideToggle @bind-Value="timer.Enabled" />
    </div>   
    <div>
        <MatNumericUpDownField Label="@Text"
                               Value="@Interval"
                               ValueChanged="@UpdateInterval"
                               DecimalPlaces="0"
                               Dense="true"
                               Minimum="1"
                               TValue="double">

        </MatNumericUpDownField>
    </div>
</div>
@code {

    private Timer timer = new Timer();


    /// <summary>
    /// Delegate invoked on timer interval
    /// </summary>
    [Parameter] public ElapsedEventHandler ElapsedEvent { get;set;}

  
    [Parameter] public string Text { get;set;} = "Seconds";

    /// <summary>
    /// Timer Interval Value in Seconds. Defaults to 5
    /// </summary>
    [Parameter] public double Interval {get;set; } = 5;
    protected override void OnInitialized()
    {

        timer.Enabled = false;
        timer.Interval = Interval * 1000;
        timer.Elapsed += ElapsedEvent;
        base.OnInitialized();

    }
    void UpdateInterval(double newInterval)
    {
        Interval = newInterval;
        timer.Interval = newInterval * 1000; //convert to milliseconds
    }
    public void Dispose()
    {
        timer.Elapsed -= ElapsedEvent;
        timer.Dispose();
    }
}
